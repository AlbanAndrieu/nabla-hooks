#
# Commands dependencies
# =====================
#
DIRENV_CMD_DEPENDENCIES="unzip tar mkdir curl chmod rm"
for mandatory_cmd in ${DIRENV_CMD_DEPENDENCIES}; do
    if [ -z "$(which ${mandatory_cmd})" ]; then
         echo "===> Mandatory command not found: ${mandatory_cmd}"
         exit 1
    fi
done
#
# Direnv configuration
# =====================
#
# layout_python3
# layout_anaconda
layout pyenv 3.8.6

export DIRENV_TMP_DIR="${PWD}/.direnv"
export DIRENV_BIN_DIR="${DIRENV_TMP_DIR}/bin"
if [ ! -e "${DIRENV_BIN_DIR}" ]; then
    mkdir -p "${DIRENV_BIN_DIR}"
fi
export PATH="${DIRENV_BIN_DIR}:${PATH}"
DIRENV_PYTHON_LIBS_DIR_RELATIVE="$(find ${DIRENV_TMP_DIR} -type d -name site-packages)"
export DIRENV_PYTHON_LIBS_DIR="$(realpath ${DIRENV_PYTHON_LIBS_DIR_RELATIVE})"

#
# Python pyenv installation
# ==========================
#
PYENV_PKG_URL="https://pyenv.run"
#if [ ! -e "${DIRENV_BIN_DIR}/pyenv" ]; then
if [ ! -e "${HOME}/.pyenv" ]; then
    echo "===> Getting pyenv (can take a while to execute)"
    curl -s -L "${PYENV_PKG_URL}" | bash
    #chmod 700 ${DIRENV_BIN_DIR}/pyenv
    echo "===> Run : pyenv init"
fi

#
# Python 2 requirements
# ==========================
#

for VERSION in $(pyenv versions --bare | egrep '^2.') ; do
  pyenv shell ${VERSION} ;
  pip install py2venv ;
done

# check if python version is set in current dir
if [ -f ".python-version" ] ; then
    if [ ! -d ".venv" ] ; then
        echo "Installing virtualenv for $(python -V)"
        # if we didn't install `py2venv` for python 2.x, we would need to use
        # `virtualenv`, which you would have to install separately.
        python -m venv .venv
    fi
    echo "Activating $(python -V) virtualenv"
    source .venv/bin/activate
fi
# announce python version and show the path of the current python in ${PATH}
echo "Virtualenv has been activated for $(python -V)"
echo "$(which python)"

#
# Python pip requirements
# ==========================
#

for VERSION in $(pyenv versions --bare | egrep '^2.') ; do
  pyenv shell ${VERSION} ;
  pip install py2venv ;
done

#
# Python pip upgrade
# ==========================
#
#  curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
for VERSION in $(pyenv versions --bare) ; do
  pyenv shell ${VERSION} ;
  pip install --upgrade pip ;
done

#
# Environment configuration
# =========================
#
#
ENV_ADDONS=".env.local .env.secrets"
for addon in ${ENV_ADDONS}; do
    if [ -e "${PWD}/${addon}" ]; then
        source ${PWD}/${addon}
    fi
done

# See https://github.com/direnv/direnv/wiki/PS1
unset PS1
