[tool.poetry]
name = "nabla-hooks"
version = "1.0.5"
description = "Custom hooks to improve code quality before pushing to git"
authors = ["Andrieu, Alban <alban.andrieu@free.fr>"]
license = "MIT"
homepage = "https://github.com/AlbanAndrieu/nabla-hooks"

packages = [
  { include = "hooks" }
]

#[repositories]

#[repositories.my-gitlab]
#url = "https://gitlab.com/api/v4/projects/<your project id>/packages/pypi"

[[tool.poetry.source]]
name = "gitlab"
# poetry config http-basic.gitlab __token__ ${CI_PIP_GITLABJUSMUNDI_TOKEN}
# export POETRY_GITLAB_TOKEN_GITLAB=${CI_PIP_GITLABJUSMUNDI_TOKEN}
url = "https://gitlab.com/api/v4/projects/7364654/packages/pypi/simple"

[tool.poetry.dependencies]
python = ">=3.10"
ansible-core = ">=2.14.14"
ansicolors = ">=1.1.8"
cfgv = ">=3.3.0"
chardet = ">=5.0.0"
click = ">=8.1.3"
click-completion = ">=0.5.2"
colorama = ">=0.4.6"
git-url-parse = ">=1.2.2"
gitpython = ">=3.1.29"
jira = ">=3.0.1"
podmena = ">=0.6.1"
pyyaml = ">=6.0"
six = ">=1.16.0"
termcolor = ">=2.1.1"
fastapi = ">=0.110.3"
uvicorn = {version = ">=0.20.0", extras = ["standard"]}
asyncpg = ">=0.27.0"
spacy = ">=3.5.4"
python-keystoneclient = ">=5.1.0"
python-swiftclient = ">=4.2.0"
prometheus-client = ">=0.16.0"
reretry = ">=0.11.8"

# See https://github.com/temporalio/samples-python/blob/main/pyproject.toml
[tool.poetry.group.encryption]
optional = true
dependencies = { cryptography = ">=41.0.2", aiohttp = "^3.8.1" }


#[tool.poetry.group.temporal]
#optional = true
#[tool.poetry.group.temporal.dependencies]
#temporalio = {version = "*", extras = ["opentelemetry"] } # 1.6.0

[tool.poetry.group.open_telemetry]
optional = true
[tool.poetry.group.open_telemetry.dependencies]
opentelemetry-distro = "0.40b0" # 0.47b0
opentelemetry-exporter-otlp = ">=1.19.0"
opentelemetry-exporter-otlp-proto-grpc = "1.19.0"
opentelemetry-instrumentation-fastapi = "0.40b0" # 0.47b0
opentelemetry-instrumentation-logging = "0.40b0" # 0.47b0
opentelemetry-exporter-jaeger-thrift = ">=1.13.0"
opentelemetry-api = ">=1.19.0"
opentelemetry-sdk = ">=1.19.0"

[tool.poetry.dev-dependencies]
ansible-cmdb = ">=1.31"
ansible-lint = {extras = ["yamllint"], version = ">=6.0.2"}
ansible-playbook-grapher = ">=1.1.3"
autopep8 = ">=2.0.0"
bandit = ">=1.7.4"
black = {version = ">=23.7.0", extras = ["d"]}
checkov = ">=2.3.115"
flake8 = ">=6.0.0"
flake8-formatter-junit-xml = ">=0.0.6"
httpx = ">=0.23.3"
molecule = ">=3.6.1"
nox = ">=2023.4.22"
pep8 = ">=1.7.1"
pep8-naming = ">=0.13.2"
pip-upgrader = ">=1.4.15"
pre-commit = ">=2.20.0"
pre-commit-hooks = ">=4.4.0"
pylint = ">=2.15.6"
pylint-junit = ">=0.3.2"
pytest = ">=7.2.0"
pytest-cov = ">=4.0.0"
pytest-dependency = ">=0.5.1"
pytest-asyncio = ">=0.20.2"
pytest-order = ">=1.0.1"
pytest-testinfra = ">=6.4.0"
readme-renderer = {version = ">=37.3", extras = ["md"]}
selenium = ">=4.6.0"
semgrep = ">=1.15.0"
setup-cfg-fmt = ">=2.2.0"
setuptools = ">=68.0.0"
sphinx = ">=7.1.2"
# testinfra = ">=6.0.0"  # pip uninstall testinfra
tox = ">=3.27.1"
twine = ">=4.0.2"
wheel = ">=0.41.1"
[tool.setuptools-pipfile]

#[tool]
#setuptools-pipfile = "src/Pipfile"

[tool.pytest.ini_options]
testpaths = "tests/"

[tool.black]
line-length = 88

[tool.ruff]
# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F"]
ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.9
target-version = "py310"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.coverage.run]
branch = true
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*site-packages*",
    "*__init__.py",
]

[tool.pdm]
[[tool.pdm.source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true
[build-system]
requires = ["pdm-pep517"]
build-backend = "pdm.pep517.api"

[project]
name = "nabla-hooks"
version = "1.0.5"
description = "Hook to validate branch name and issue"
authors = [
    {name = "Andrieu, Alban", email = "alban.andrieu@free.fr"},
]
#dependencies = ["ansible-cmdb==1.31", "ansible-core>=2.11.6", "ansible-lint==5.0.8", "ansicolors==1.1.8", "cfgv==3.3.0", "chardet>=3.0.4", "click>=7.1.1", "click-completion>=0.5.2", "colorama>=0.4.3", "filemagic==1.6", "git-url-parse>=1.2.2", "gitpython>=3.1.1", "jira==3.0.1", "podmena>=0.4.2", "pyyaml>=5.1", "six>=1.14.0", "termcolor>=1.1.0"]
dependencies = ["dynamic"]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}

#[virtualenvs]
#in-project = true
