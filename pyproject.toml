[build-system]
requires = ["setuptools>=61.0", "versioneer[toml]==0.29", "packaging>=24.2"]
build-backend = "setuptools.build_meta"
# requires = ["hatchling", "versioningit"]
# build-backend = "hatchling.build"
# build-backend = "poetry.core.masonry.api"

[project]
name = "nabla-hooks"
dynamic = ["version"]
description = "This is nabla_custom hooks package"
readme = "README.md"
license = "Apache-2.0"
requires-python = ">=3.9, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*"
authors = [
    { name = "Alban Andrieu", email = "alban.andrieu@free.fr" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython",
]

# [tool.hatch.version]
# source = "versioningit"
# # path = "hooks/__init__.py"

# [tool.hatch.build]
# # Replace the path below with the path to the file created by the
# # `write` step:
# artifacts = ["hooks/_version.py"]
#
# [tool.hatch.build.targets.sdist]
# include = [
#     "/hooks",
# ]

[tool.versioningit]
default-version = "0.0.0+unknown"

[project.urls]
"Homepage" = "https://github.com/AlbanAndrieu/nabla-hooks"

[project.optional-dependencies]
toml = ["tomli; python_version < '3.11'"]

#[virtualenvs]
#in-project = true

[tool.poetry]
name = "nabla-hooks"
version = "1.0.6"
description = "Custom hooks to improve code quality before pushing to git"
authors = ["Andrieu, Alban <alban.andrieu@free.fr>"]

packages = [
  { include = "hooks" }
]

[[tool.poetry.source]]
name = "gitlab"
url = "https://gitlab.com/api/v4/groups/7364654/-/packages/pypi/simple"
priority = "explicit"


# [[tool.poetry.source]]
# name = "PyPI"
# priority = "primary"

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
# ansible-core = ">=2.14.14"
ansicolors = ">=1.1.8"
# cfgv = ">=3.3.0"
# chardet = ">=3.0.2" # for twine upload
click = ">=8.1.3"
click-completion = ">=0.5.2"
colorama = ">=0.4.6"
git-url-parse = ">=1.2.2"
gitpython = ">=3.1.29"
jira = ">=3.8.0"
podmena = ">=0.6.1"
pyyaml = ">=6.0"
# six = ">=1.16.0"
termcolor = ">=2.1.1"
fastapi = {version = ">=0.115.3", extras = ["standard"]}
uvicorn = {version = ">=0.20.0", extras = ["standard"]}
asyncpg = ">=0.27.0"
spacy = ">=3.5.4"
packaging = ">=24.2"
python-gitlab = ">=6.4.0"
python-keystoneclient = ">=5.1.0"
python-swiftclient = ">=4.2.0"
prometheus-client = ">=0.20.0"
reretry = ">=0.11.8"

# See https://github.com/temporalio/samples-python/blob/main/pyproject.toml
[tool.poetry.group.encryption]
optional = false
dependencies = { cryptography = ">=41.0.2", aiohttp = ">=3.12.13" }

[tool.poetry.group.open_telemetry]
optional = true

[tool.poetry.group.open_telemetry.dependencies]
opentelemetry-distro = ">=0.49b1"
opentelemetry-exporter-otlp = ">=1.33.1"
opentelemetry-exporter-otlp-proto-grpc = ">=1.33.1"
opentelemetry-instrumentation-fastapi = ">=0.49b1"
opentelemetry-instrumentation-logging = ">=0.49b1"
opentelemetry-exporter-jaeger-thrift = ">=1.13.0"
opentelemetry-api = ">=1.33.1"
opentelemetry-sdk = ">=1.33.1"

[tool.poetry.group.test]
optional = true
[tool.poetry.group.test.dependencies]
coverage = ">= 7.2.7"
# molecule = "~=5.1.0"
mypy = ">=1.16.0"
pytest = ">=7.2.0" # ">=8.3.3,<9.0.0"
pytest-cov = ">=6.0.0"
pytest-env = ">=1.1.5"
# pytest-mock = ">=3.14.0"
pytest-dependency = ">=0.5.1"
pytest-asyncio = ">=0.21.0"
pytest-order = ">=1.0.1"
pytest-testinfra = ">=10.1.1"
nox = ">=2023.4.22"
tox = ">=3.27.1"

[tool.poetry.group.format]
optional = true
[tool.poetry.group.format.dependencies]
# autopep8 = ">=2.0.0"
black = {version = ">=23.9.1", extras = ["d"]}
flake8 = ">=6.1.0"
flake8-formatter-junit-xml = ">=0.0.6"
pylint = ">=2.15.6"
pylint-junit = ">=0.3.2"
ruff = ">=0.5.1"

[tool.poetry.group.dev.dependencies]
ansible-cmdb = ">=1.31"
ansible-lint = {extras = ["yamllint"], version = ">=6.0.2"}
ansible-playbook-grapher = ">=2.9.2"
bandit = ">=1.7.4" # TODO 1.8.3
checkov = ">=3.2.442" # 2.3.115
httpx = ">=0.23.3"
molecule = ">=3.6.1"
packaging = ">=23.0"
pep8 = ">=1.7.1"
pep8-naming = ">=0.13.2"
pip-upgrader = ">=1.4.15"
pre-commit = ">=3.7.1" # 4.0.1
pre-commit-hooks = ">=4.4.0"
readme-renderer = {version = ">=37.3", extras = ["md"]}
selenium = ">=4.6.0"
# semgrep = ">=1.15.0"
setup-cfg-fmt = ">=2.2.0"
setuptools = ">=68.0.0"
sphinx = ">=7.1.2"
# testinfra = ">=6.0.0"  # pip uninstall testinfra
twine = ">=4.0.2"
versioneer = {version = ">=0.29", extras = ["toml"]}
versioningit = ">=3.3.0"
wheel = ">=0.45.1"
srsly = ">=2.4.8" # Downgrading srsly (2.5.1 -> 2.4.8) with python  3.13.3

[tool.setuptools-pipfile]

#[tool]
#setuptools-pipfile = "src/Pipfile"

[tool.pytest.ini_options]
testpaths = "tests/"
# addopts = "--durations=12  --disable-socket --allow-hosts=localhost,127.0.0.1,::1 --strict-markers"
# asyncio_default_fixture_loop_scope = "session"
# asyncio_mode = "auto"  # See pytest-asyncio plug-in

[tool.black]
line-length = 88

[tool.pyright]
include = ["nabla"]
exclude = ["**/node_modules",
    "**/__pycache__",
    "nabla/experimental",
    "nabla/typestubs"
]
venvPath = "."
venv = ".venv"

reportMissingImports = "error"
reportMissingTypeStubs = false

pythonVersion = "3.12"
pythonPlatform = "Linux"

[tool.ruff]
# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "F"]
lint.ignore = []

# Allow autofix for all enabled rules (when `--fix`) is provided.
lint.fixable = ["ALL"]
lint.unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
lint.per-file-ignores = {}

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.12.3
target-version = "py312"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.coverage.run]
branch = true
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*site-packages*",
    "*__init__.py",
]

[tool.mypy]
show_error_codes = true
warn_unreachable = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
# Disabling incremental mode is required for `warn_unused_configs = true` to work
incremental = false
disallow_untyped_defs = true
check_untyped_defs = true
strict_equality = true
implicit_reexport = false
no_implicit_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
[tool.pdm]
[[tool.pdm.source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "hooks/_version.py"
versionfile_build = "hooks/_version.py"
tag_prefix = "v-"
# parentdir_prefix = "nabla-hooks-"
parentdir_prefix = ""
