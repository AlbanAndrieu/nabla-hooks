---
name: Python package

on:
  - push
  - pull_request

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    env:
      JIRA_USER: aandrieu
      JIRA_PASSWORD: XXX
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pip dependencies
        run: |
          pip install virtualenv
          virtualenv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest tox tox-gh-actions
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # if [ -f requirements.testing.txt ]; then pip install -r requirements.testing.txt; fi
          if [[ -f requirements.txt && -f requirements.testing.txt ]]; then pip install -r requirements.txt -r requirements.testing.txt; fi

      # - name: Install pipenv dependencies
      #   run: |
      #     pip install virtualenv
      #     virtualenv venv
      #     source venv/bin/activate
      #     python -m pip install --upgrade pip
      #     python -m pip install pipenv=="2022.6.7"
      #     python -m pipenv install --dev --ignore-pipfile

      - name: Lint with flake8
        run: |
          source venv/bin/activate
          # stop the build if there are Python syntax errors or undefined names
          #flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 hooks tests  --config .flake8 --count --exit-zero --max-line-length=88 --max-complexity=12 --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide, but black 88
          flake8 hooks tests --count --exit-zero --max-line-length=88 --max-complexity=12 --statistics

      - name: Lint with pylint
        run: |
          ./scripts/run-pylint.sh

      - name: Lint with bandit
        run: |
          ./scripts/run-bandit.sh

      - name: Test with pytest
        run: |
          python -m pytest --cov=--cov-fail-under=70

      - name: Test with tox
        run: |
          tox

      - name: SonarCloud Scan
        # You may pin to the exact commit or the version.
        # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        uses: SonarSource/sonarcloud-github-action@v1.7
        with:
          # Additional arguments to the sonarcloud scanner
          args:  # optional
          # Set the sonar.projectBaseDir analysis property
          projectBaseDir:  # optional, default is .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
