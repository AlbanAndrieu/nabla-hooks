---
name: test-specific

on:
  workflow_dispatch:
    inputs:
      expression:
        description: "Test expression to filter for"
        required: true
        type: choice
        options:
          - "uv-none-mkdocs"
          - "uv-none-none"
          - "uv-requirements.txt-mkdocs"
          - "uv-requirements.txt-none"
          - "virtualenv-requirements.txt-mkdocs"
          - "virtualenv-requirements.txt-none"
          - "conda-requirements.txt-mkdocs"
          - "conda-requirements.txt-none"
          - "conda-environment.yml-mkdocs"
          - "conda-environment.yml-none"
          - "pipenv-Pipfile-mkdocs"
          - "pipenv-Pipfile-none"
          - "none-requirements.txt-mkdocs"
          - "none-requirements.txt-none"
      os:
        description: "Operating system to run on"
        required: true
        type: choice
        default: "ubuntu-latest"
        options:
          - ubuntu-latest
          - macos-latest
          - windows-latest

jobs:
  tests-specific:
    name: Tests (${{ inputs.os }})
    runs-on: ${{ inputs.os }}
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: "3.10"
          allow-prereleases: true
          cache: "pip"
          cache-dependency-path: |
            pyproject.toml
            dev-requirements.txt

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@505e6394dae86d6a5c7fbb6e3fb8938e3e863830 # v3
        with:
          auto-activate-base: true
          activate-environment: ""

      - name: Cache conda packages
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4
        env:
          # Increase this value to reset cache explicitly
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('ccds/hook_utils/dependencies.py') }}

      - name: Setup for Windows
        if: ${{ inputs.os == 'windows-latest' }}
        run: |
          # Install GNU make
          choco install --verbose make
          # Add conda binaries directory to PATH so that conda is accessible
          echo "${CONDA}\Scripts" >> $GITHUB_PATH
          # Set bash executable explicitly since Make may pick wrong shell
          echo "BASH_EXECUTABLE=$(which bash)" >> "$GITHUB_ENV"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          make requirements

      - name: Check dependencies
        run: |
          if [[ -z "${BASH_EXECUTABLE}" ]]; then
            bash --version
          else
            echo $BASH_EXECUTABLE
            $BASH_EXECUTABLE --version
          fi
          which make
          make --version
          which conda
          conda --version
          which pipenv
          pipenv --version
          which virtualenv
          virtualenv --version

      - name: Run tests
        run: |
          make test ARGS="-k ${{ inputs.expression }}"
