# vi: ft=yaml.ansible.jinja2
---
fail_fast: true
minimum_pre_commit_version: 3.7.1
exclude: "docs/_build/"
ci:
  # format compatible with commitlint
  autoupdate_commit_msg: 'chore: pre-commit autoupdate'
  autoupdate_schedule: monthly
  autofix_commit_msg: |
    chore: auto fixes from pre-commit.com hooks
    for more information, see https://pre-commit.ci
  skip:
    # https://github.com/pre-commit-ci/issues/issues/55
    - pip-compile
    - schemas
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks.git
    # pre-commit-hooks is not working on both environment
    # You will have to switch
    # pre-commit-hooks.git from v2.1.0 to v2.4.0
    #    rev: v2.1.0 # ok python3.6  # 18.04.3
    #    rev: v2.2.3 # ok python3.6  # 19.04 but failing on 18.04.3
    #    rev: v2.4.0 # ok python3.6 on Ubuntu 18.04 AND python3.7 on Ubuntu 19.04
    #    rev: v3.4.0 # ok python3.6 on Ubuntu 18.04 AND python3.7 on Ubuntu 19.04 AND python3.8 on Ubuntu 20.04
    rev: v4.6.0  # ok python3.6 on Ubuntu 18.04 AND python3.7 on Ubuntu 19.04 AND python3.8 on Ubuntu 20.04
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: check-ast
      - id: end-of-file-fixer
      - id: check-added-large-files
        args: ["--maxkb=123"]
        exclude: >
          (?x)^(
            .pnp.cjs|
            package-lock.json|
            npm-shrinkwrap.json|
            poetry.lock|
            Pipfile.lock|
            yarn.lock|
          )$
      - id: check-builtin-literals
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-executables-have-shebangs
        exclude: >
          (?x)^(
              clean.bat|
              build.bat|
              mvnw.cmd|
              .mvn/|
              .venv|
              .direnv|
          )$
      - id: check-shebang-scripts-are-executable
      - id: check-json
        exclude: >
          (?x)^(
            ^.vscode/|
            .devcontainer/devcontainer.json|
          )$
      - id: check-symlinks
      - id: check-toml
      - id: check-xml
      - id: check-yaml
        args: [--allow-multiple-documents]
        exclude: >
          (?x)^(
            .gitlab-ci.yml|
            templates/.*.gitlab-ci.yml|  # because of !reference
            k8s/.*|
          )$
      - id: check-symlinks
      - id: check-merge-conflict
      - id: debug-statements
        exclude: ^.cache/
      - id: detect-private-key
        exclude: >
          (?x)^(
              README.md|
              .ssh/id_rsa|
              roles/jenkins-master/defaults/main.yml|
              roles/jenkins-master/README.md|
          )$
      # Disable as incompatible with black formatting
      # - id: double-quote-string-fixer
      #   exclude: >
      #     (?x)^(
      #         tests/.*|
      #     )$
      - id: name-tests-test
        exclude: >
          (?x)^(
              tests/.*|
          )$
#      -   id: no-commit-to-branch
#        args: [--branch, develop, --branch, master, --branch, release/*]
      - id: end-of-file-fixer
      - id: fix-byte-order-marker
      # - id: fix-encoding-pragma
      #   args: [--remove]
      - id: requirements-txt-fixer
      - id: sort-simple-yaml
      - id: file-contents-sorter
      - id: mixed-line-ending
        args: [--fix=lf]
  - repo: https://github.com/pre-commit/mirrors-autopep8
    rev: v2.0.4
    hooks:
      - id: autopep8
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        # It is recommended to specify the latest version of Python
        # supported by your project here, or alternatively use
        # pre-commit's default_language_version, see
        # https://pre-commit.com/#top_level-default_language_version
        language_version: python3.10
  - repo: https://github.com/PyCQA/flake8
    rev: 7.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --max-complexity=30]
  - repo: https://github.com/asottile/reorder_python_imports.git
    rev: v3.13.0
    hooks:
      - id: reorder-python-imports
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.16.0
    hooks:
      - id: pyupgrade
  # - repo: https://github.com/pycqa/isort
  #   rev: 5.10.1
  #   hooks:
  #     - id: isort
  - repo: https://github.com/pre-commit/pre-commit.git
    rev: v3.7.1
    hooks:
      - id: validate_manifest
  - repo: https://github.com/asottile/add-trailing-comma
    rev: v3.1.0
    hooks:
      - id: add-trailing-comma
  - repo: https://github.com/willthames/ansible-lint.git
    rev: v24.7.0
    hooks:
      - id: ansible-lint
        files: \.(yaml|yml)$
        exclude: >
          (?x)^(
            .travis.yml|
            docker/|
            requirements.yml|
            playbooks/group_vars/all/vault.yml|
            .gitlab-ci.yml|
          )$
  - repo: https://github.com/doublify/pre-commit-hindent.git
    rev: b3680b6ebf9f7cf29b19307f246adef66756feef
    hooks:
      - id: hindent
  - repo: https://github.com/scop/pre-commit-shfmt
    rev: v3.8.0-1
    hooks:
      # Choose one of:
      # - id: shfmt         # native (requires Go to build)
      - id: shfmt-docker  # Docker image (requires Docker to run)
  - repo: https://github.com/detailyang/pre-commit-shell
    rev: 1.0.5
    hooks:
      - id: shell-lint
        args: [-x]
        exclude: >
          (?x)^(
            mvnw|
            biscuitcutter.sh|
            hooks|
            tests/.*|
          )$
  - repo: https://github.com/IamTheFij/ansible-pre-commit
    rev: v0.1.2
    hooks:
      - id: encryption-check
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        args: [-c, .bandit.yml]
        exclude: >
          (?x)^(
            noxfile.py|
            versioneer.py|
            hooks/_version.py|
            hooks/tests/|
          )$
  - repo: https://github.com/Lucas-C/pre-commit-hooks-nodejs
    rev: v1.1.2
    hooks:
      - id: htmllint
        args: [--config, .eslintrc.json]
        # args: [--config, .htmlhintrc]
        files: ^src/
      - id: markdown-toc
        args: [--maxdepth, "3", -i]
      - id: dockerfile_lint
        args: [--permissive, --verbose, --dockerfile, ./Dockerfile]
        always_run: false
  - repo: https://github.com/hadolint/hadolint
    rev: v2.13.0-beta
    hooks:
      - id: hadolint-docker
  - repo: https://github.com/zricethezav/gitleaks
    rev: v8.18.4
    hooks:
      - id: gitleaks-docker
        entry: zricethezav/gitleaks protect --verbose --redact --staged
  - repo: https://github.com/jorisroovers/gitlint
    rev: v0.19.1
    hooks:
      - id: gitlint
  - repo: local
    hooks:
      - id: git-branches-check
        name: Git branches check
        description: Check for old stale and already merged branches from the current repo with user friendly messages and colors
        entry: pre_commit_hooks/git-branches-check.sh
        language: script
        types: [shell]
        always_run: true
        verbose: true
        # additional_dependencies: [jira>=2.0.0]
        # args: [--max=1, --verbose, --debug]
  # -  repo: local
  #    hooks:
  #    - id: jenkinsfile-check
  #      name: Jenkinsfile check
  #      description: Check if Jenkinsfile is valid
  #      entry: pre_commit_hooks/jenkinsfile-check.sh Jenkinsfile
  #      files: 'Jenkinsfile'
  #      language: script
  #      types: [shell]
  #      always_run: true
  #      verbose: true
  - repo: local
    hooks:
      - id: publicversion-check
        name: PublicVersion check
        description: Check if version is valid
        entry: ./tests/version.sh
        language: script
        types: [shell]
        always_run: true
        verbose: true
  # - repo: https://github.com/zricethezav/gitleaks
  #   rev: v8.15.2
  #   hooks:
  #     - id: gitleaks-docker
  #       entry: zricethezav/gitleaks protect --verbose --redact --staged
  - repo: https://github.com/oxsecurity/megalinter
    rev: v7.13.0
    hooks:
      - id: megalinter-incremental  # Faster, less thorough
        stages:
          - commit
      # - id: megalinter-full # Slower, more thorough
      #   stages:
      #     - push
  # - repo: local
  #   hooks:
  #     - id: lint
  #       name: Lint
  #       entry: python3 -m nox -rs lint
  #       language: system
  #       pass_filenames: false
  #     - id: black
  #       name: Black
  #       entry: python3 -m nox -rs black
  #       language: system
  #       pass_filenames: false
  #     - id: test
  #       name: Test
  #       entry: python3 -m nox -rs test
  #       language: system
  #       pass_filenames: false
